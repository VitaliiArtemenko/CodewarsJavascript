const findUniqTest = require('./findUniq');

describe('Find the unique number', () => {

    it('Test_1', () => {
        expect(findUniqTest([ 1, 0, 0 ])).toEqual(1);
    });

    it('Test_2', () => {
        expect(findUniqTest([ 0, 1, 0 ])).toEqual(1);
    });

    it('Test_3', () => {
        expect(findUniqTest([ 0, 0, 1 ])).toEqual(1);
    });

    it('Test_4', () => {
        expect(findUniqTest([ 1, 1, 1, 2, 1, 1 ])).toEqual(2);
    });

    it('Test_5', () => {
        expect(findUniqTest([ 1, 1, 2, 1, 1 ])).toEqual(2);
    });

    it('Test_6', () => {
        expect(findUniqTest([ 3, 10, 3, 3, 3 ])).toEqual(10);
    });

    it('Test_7', () => {
        expect(findUniqTest([ 8, 8, 8, 8, 8, 8, 8, 7 ])).toEqual(7);
    });

    it('Test_8', () => {
        expect(findUniqTest([
            1099511627776, 1125899906842624, 1125899906842624, 1125899906842624,
            1125899906842624, 1125899906842624, 1125899906842624, 1125899906842624,
            1125899906842624, 1125899906842624, 1125899906842624, 1125899906842624,
            1125899906842624, 1125899906842624, 1125899906842624, 1125899906842624,
            1125899906842624, 1125899906842624, 1125899906842624, 1125899906842624,
            1125899906842624, 1125899906842624, 1125899906842624, 1125899906842624,
            1125899906842624, 1125899906842624, 1125899906842624, 1125899906842624,
            1125899906842624, 1125899906842624, 1125899906842624, 1125899906842624,
            1125899906842624, 1125899906842624, 1125899906842624, 1125899906842624,
            1125899906842624, 1125899906842624, 1125899906842624, 1125899906842624,
            1125899906842624, 1125899906842624, 1125899906842624, 1125899906842624,
            1125899906842624, 1125899906842624, 1125899906842624, 1125899906842624,
            1125899906842624, 1125899906842624, 1125899906842624, 1125899906842624,
            1125899906842624, 1125899906842624, 1125899906842624, 1125899906842624,
            1125899906842624, 1125899906842624, 1125899906842624, 1125899906842624,
            1125899906842624, 1125899906842624, 1125899906842624, 1125899906842624,
            1125899906842624, 1125899906842624, 1125899906842624, 1125899906842624,
            1125899906842624, 1125899906842624, 1125899906842624, 1125899906842624,
            1125899906842624, 1125899906842624, 1125899906842624, 1125899906842624,
            1125899906842624, 1125899906842624, 1125899906842624, 1125899906842624,
            1125899906842624, 1125899906842624, 1125899906842624, 1125899906842624,
            1125899906842624, 1125899906842624, 1125899906842624, 1125899906842624,
            1125899906842624, 1125899906842624, 1125899906842624, 1125899906842624,
            1125899906842624, 1125899906842624, 1125899906842624, 1125899906842624,
            1125899906842624, 1125899906842624, 1125899906842624, 1125899906842624
        ])).toEqual(1099511627776);
    });
});